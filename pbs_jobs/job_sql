## FICHEIRO MODELO PBS CRIADO PARA A DISCIPLINA DE CPD::ESC
## GRUPO : FILIPE OLIVEIRA and SERGIO CALDAS
## FEV/2016

#!/bin/bash

#          Remarks: A line beginning with # is a comment.
#          A line beginning with #PBS is a PBS directive.
#          PBS directives must come first; any directives
#          after the first executable statement are ignored.

#PBS -N SQL
#PBS -l walltime=10:00:00
#PBS -q mei

#          PBS can send informative email messages to you about the
#          status of your job.  Specify a string which consists of
#          either the single character "n" (no mail), or one or more
#          of the characters "a" (send mail when job is aborted),
#          "b" (send mail when job begins), and "e" (send mail when
#          job terminates).  The default is "a" if not specified.
#          You should also specify the email address to which the
#          message should be send via the -M option.

#PBS -m abe
#PBS -M a57816@alunos.uminho.pt

#          Specify the number of nodes requested and the
#          number of processors per node. 

#PBS -l nodes=1:r662:ppn=20

echo "running for query ${query} dataset ${dataset} n=${samples} times for ${version} version"

/home/a57816/postgres/bin/pg_ctl -D /home/a57816/postgres/data/ stop -s -m fast

remote=$(/home/a57816/postgres/bin/pg_ctl status -D /home/a57816/postgres/data/)
echo $remote
if [ "$remote" == "pg_ctl: no server running" ] 
then 

	echo "No server detected"
	echo "starting server"
	remote=$(/home/a57816/postgres/bin/pg_ctl -D /home/a57816/postgres/data/ -l logfile start)
else
	echo "NO need to start server"
	echo "$remote"
	
fi

sleep 5;
echo "Started POSTGRES"

for (( seq_num=1; seq_num <= samples ; ++seq_num ))
do
~/postgres/bin/psql -U a57816 postgres -f /home/a57816/CPD_PI_OLAP/queries/"${version}"/"${query}"_"${dataset}".sql | grep "Execution time:" | sed 's/[^0-9.]*//g' >> "/home/a57816/CPD_PI_OLAP/src/timing/pgres_${version}_query_${query}_${dataset}.csv"
sleep 2;
done

/home/a57816/postgres/bin/pg_ctl -D /home/a57816/postgres/data/ stop -s -m fast

echo "Done..."

